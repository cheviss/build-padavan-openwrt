###########################################################################
# Modifications made by: Việt Anh Bùi | https://github.com/vietanhbui2000 #
###########################################################################

name: Build OpenWrt Toolchain

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-openwrt-tlc.yml'
#  schedule:
#    - cron: 0 0 * * 1
#  watch:
#    - types: started

env:
  REPO_URL: https://github.com/vietanhbui2000/lede
  REPO_BRANCH: master-R20.3.11
  DEVICE: "MI-MINI"
  CONFIG_FILE: configs/lede/MI-MINI.config
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede

    - name: Update & install feeds
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load device configuration
      run: |
        [ -e files ] && mv files lede/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config

    - name: Generate configuration file
      run: |
        cd lede
        make defconfig

    - name: Download packages
      run: |
        cd lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile toolchain
      id: compile
      run: |
        cd lede
        echo -e "$(nproc) thread compile"
        make toolchain/install -j$(nproc) || make toolchain/install -j1 V=s
        echo "::set-output name=status::success"

    - name: Prepare files
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        tar -czf lede.tar.gz lede
        echo "::set-output name=status::success"

    - name: Upload source directory
      if: steps.prepare.outputs.status == 'success' && !cancelled()
      uses: actions/upload-artifact@master
      with:
        name: openwrt_toolchain
        path: lede.tar.gz
