###########################################################################
# Modifications made by: Việt Anh Bùi | https://github.com/vietanhbui2000 #
# Original author: P3TERX | https://github.com/P3TERX                     #
#                  coolsnowwolf | https://github.com/coolsnowwolf         #
###########################################################################

name: Build Gargoyle
on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-gargoyle.yml'
#  schedule:
#    - cron: 0 0 * * 1
#  watch:
#    - types: started

env:
  REPO_URL: https://github.com/ericpaulbishop/gargoyle.git
  REPO_BRANCH: 1.12
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        git clone $REPO_URL gargoyle
        cd gargoyle
        git checkout $REPO_BRANCH

    - name: Generate configuration file
      run: |
        cd gargoyle
        echo "miwifi-mini-" > gargoyle/targets/ramips/profiles/mt7620_usb/profile_images

    - name: Compile firmware
      id: compile
      run: |
        cd gargoyle
        make FULL_BUILD=true ramips.mt7620_usb
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: gargoyle_firmware
        path: gargoyle/images
